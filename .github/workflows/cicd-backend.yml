name: Backend CI/CD

on:
  pull_request:
    types: [closed]
    branches:
      - main
      - develop
    paths:
      - 'backend/**'

  workflow_dispatch:
    inputs:
      branch:
        description: 'Target branch to run the workflow'
        required: true
        default: 'develop'
        type: choice
        options:
          - develop
          - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set branch and image info
        run: |
          BRANCH_NAME="${{ github.event.inputs.branch != '' && github.event.inputs.branch || github.ref_name }}"
          echo "BRANCH_TAG=$BRANCH_NAME" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "FULL_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/bootcampchat-backend:$BRANCH_NAME-latest" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bootcampchat-backend:${{ env.BRANCH_TAG }}-latest,
            ${{ secrets.DOCKERHUB_USERNAME }}/bootcampchat-backend:${{ github.sha }}

      - name: Notify Discord on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
              -X POST \
              -d "{\"content\": \"✅ **[${{ env.BRANCH }} 브랜치]** 부하테스트 BE **CI** 성공\\n> Branch: \`${{ env.BRANCH }}\`\\n> Commit: ${{ env.SHORT_SHA }}\\n> 이미지: ${{ env.FULL_IMAGE }}\"}" \
              ${{ secrets.DISCORD_WEBHOOK_CICD_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -H "Content-Type: application/json" \
              -X POST \
              -d "{\"content\": \"❌ **[${{ env.BRANCH }} 브랜치]** 부하테스트 BE **CI** 실패\\n> Branch: \`${{ env.BRANCH }}\`\\n> Commit: ${{ env.SHORT_SHA }}\\n> [워크플로우 로그 보기]($WORKFLOW_URL)\"}" \
              ${{ secrets.DISCORD_WEBHOOK_CICD_URL }}

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Set branch and image info
        run: |
          BRANCH_NAME="${{ github.event.inputs.branch != '' && github.event.inputs.branch || github.ref_name }}"
          echo "BRANCH_TAG=$BRANCH_NAME" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "FULL_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/bootcampchat-backend:$BRANCH_NAME-latest" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.BE_SSH_HOST }}
          username: ${{ secrets.AWS_SSH_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            docker pull ${{ env.FULL_IMAGE }}
            docker stop bootcampchat-backend || true
            docker rm bootcampchat-backend || true
            docker run -d --name bootcampchat-backend --env-file /home/ubuntu/2-ktb-BootcampChat/backend/.env -p ${{ secrets.BE_PORT }}:${{ secrets.BE_PORT }} ${{ env.FULL_IMAGE }}


      - name: Notify Discord on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
              -X POST \
              -d "{\"content\": \"✅ **[${{ env.BRANCH }} 브랜치]** 부하테스트 BE **CD** 성공\\n> Branch: \`${{ env.BRANCH }}\`\\n> Commit: ${{ env.SHORT_SHA }}\\n> 이미지: ${{ env.FULL_IMAGE }}\"}" \
              ${{ secrets.DISCORD_WEBHOOK_CICD_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -H "Content-Type: application/json" \
              -X POST \
              -d "{\"content\": \"❌ **[${{ env.BRANCH }} 브랜치]** 부하테스트 BE **CD** 실패\\n> Branch: \`${{ env.BRANCH }}\`\\n> Commit: ${{ env.SHORT_SHA }}\\n> [워크플로우 로그 보기]($WORKFLOW_URL)\"}" \
              ${{ secrets.DISCORD_WEBHOOK_CICD_URL }}